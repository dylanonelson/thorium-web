.readerSettingsPopover {
  background-color: var(--theme-background);
  color: var(--theme-text);
  padding: 0;
  border-radius: var(--layout-radius);
  border: 1px solid var(--theme-subdue);
  position: relative;

  max-height: 100%;
  overflow-y: auto;
  width: calc(340px + (2 * var(--layout-spacing)));
  max-width: 80%;
  box-sizing: border-box;
  filter: drop-shadow(var(--theme-elevate));
}

.readerSettingsLabel {
  display: block;
  font-weight: bold;
}

.readerSettingsRadioWrapper {
  display: flex;
  gap: 20px;
  margin-top: var(--layout-spacing);
  text-align: center;
}

.readerSettingsRadio {
  padding: 5px;
  border-radius: var(--layout-radius);
  box-sizing: border-box;
  border: 2px solid transparent;
}

.readerSettingsRadio:not(.readerSettingsThemeRadio)[data-selected] {
  border: 2px solid var(--theme-subdue);
}

.readerSettingsRadio[data-disabled] {
  color: var(--theme-disable);
}

.readerSettingsRadio[data-hovered] {
  background-color: var(--theme-hover);
}

.readerSettingsRadio[data-focused] {
  outline: 2px solid var(--theme-focus);
}

.readerSettingsRadio svg {
  width: var(--icon-size, 32px);
  height: var(--icon-size, 32px);
  /* So that it’s the same color as text based on state */
  fill: currentColor;
}

.readerSettingsRadio span {
  display: block;
}

.readerSettingsThemesWrapper {
  /* TMP until we have all the sheets/modals */
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-flow: row;
  max-width: 100%;
  gap: 10px;
}

.readerSettingsThemeRadio {
  padding: 5px 25px;
  position: relative;
}

.readerSettingsThemeRadio svg {
  width: calc(var(--icon-size, 24px) * 5/6);
  height: calc(var(--icon-size, 24px) * 5/6);
  position: absolute;
  right: 5px;
  top: 5px;
  /* So that it’s the same color as text w/o having to expose a custom prop globally */
  fill: currentColor;
}

.readerSettingsSeparator {
  margin: var(--layout-spacing) 0;
  border: none;
  border-top: 1px solid var(--theme-subdue);
}